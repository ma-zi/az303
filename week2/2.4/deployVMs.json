{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.3.255.40792",
      "templateHash": "11706123786759723792"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "environment": {
      "type": "string",
      "defaultValue": "Dev"
    },
    "osDiskType": {
      "type": "string",
      "defaultValue": "Standard_LRS"
    },
    "adminUsername": {
      "type": "string"
    },
    "adminPassword": {
      "type": "secureString"
    },
    "ubuntuOSVersion": {
      "type": "string",
      "defaultValue": "18.04-LTS",
      "allowedValues": [
        "12.04.5-LTS",
        "14.04.5-LTS",
        "16.04.0-LTS",
        "18.04-LTS"
      ]
    }
  },
  "functions": [],
  "variables": {
    "numberOfVMs": 2,
    "vmNameFormat": "vmubuntu{0}",
    "osDiskNameFormat": "osdisk-{0}-01",
    "networkInterfaceName": "nic-{0}-01"
  },
  "resources": [
    {
      "copy": {
        "name": "nic",
        "count": "[length(range(0, variables('numberOfVMs')))]"
      },
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-11-01",
      "name": "[format(variables('networkInterfaceName'), format(variables('vmNameFormat'), padLeft(range(0, variables('numberOfVMs'))[copyIndex()], 2, '0')))]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[reference(resourceId('Microsoft.Resources/deployments', 'networkDeploy'), '2019-10-01').outputs.subnets.value[range(0, variables('numberOfVMs'))[copyIndex()]].id]"
              },
              "privateIPAllocationMethod": "Dynamic"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'networkDeploy')]"
      ]
    },
    {
      "copy": {
        "name": "virtualmachines",
        "count": "[length(range(0, variables('numberOfVMs')))]"
      },
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2020-12-01",
      "name": "[format(variables('vmNameFormat'), padLeft(range(0, variables('numberOfVMs'))[copyIndex()], 2, '0'))]",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_B1s"
        },
        "storageProfile": {
          "osDisk": {
            "name": "[format(variables('osDiskNameFormat'), format(variables('vmNameFormat'), padLeft(range(0, variables('numberOfVMs'))[copyIndex()], 2, '0')))]",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[parameters('osDiskType')]"
            }
          },
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "[parameters('ubuntuOSVersion')]",
            "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format(variables('networkInterfaceName'), format(variables('vmNameFormat'), padLeft(range(0, variables('numberOfVMs'))[range(0, variables('numberOfVMs'))[copyIndex()]], 2, '0'))))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[format(variables('vmNameFormat'), padLeft(range(0, variables('numberOfVMs'))[copyIndex()], 2, '0'))]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', format(variables('networkInterfaceName'), format(variables('vmNameFormat'), padLeft(range(0, variables('numberOfVMs'))[range(0, variables('numberOfVMs'))[copyIndex()]], 2, '0'))))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "networkDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.3.255.40792",
              "templateHash": "8340116013616118090"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "environment": {
              "type": "string",
              "defaultValue": "Dev"
            }
          },
          "functions": [],
          "variables": {
            "tags": {
              "Env": "[parameters('environment')]"
            },
            "vnetName": "[format('vnet-{0}-01', parameters('location'))]",
            "snetName": "snet-{0}-{1}"
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2020-11-01",
              "name": "nsg-weballow-01",
              "location": "[parameters('location')]",
              "tags": "[variables('tags')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "AllowWebTraffic",
                    "properties": {
                      "direction": "Inbound",
                      "protocol": "*",
                      "sourceAddressPrefix": "*",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "443",
                      "access": "Allow",
                      "priority": 1000
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2020-11-01",
              "name": "[variables('vnetName')]",
              "location": "[parameters('location')]",
              "tags": "[variables('tags')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "10.0.0.0/16"
                  ]
                },
                "subnets": [
                  {
                    "name": "[format(variables('snetName'), 'web', '01')]",
                    "properties": {
                      "addressPrefix": "10.0.0.0/24",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-weballow-01')]"
                      }
                    }
                  },
                  {
                    "name": "[format(variables('snetName'), 'mail', '01')]",
                    "properties": {
                      "addressPrefix": "10.0.1.0/24",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-weballow-01')]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-weballow-01')]"
              ]
            }
          ],
          "outputs": {
            "subnets": {
              "type": "array",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))).subnets]"
            }
          }
        }
      }
    }
  ],
  "outputs": {
    "adminUsername": {
      "type": "string",
      "value": "[parameters('adminUsername')]"
    }
  }
}